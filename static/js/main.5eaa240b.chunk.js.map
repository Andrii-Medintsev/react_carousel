{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transformPosition","gap","buttonsHandler","direction","props","images","itemSize","step","frameSize","infinite","setState","result","maxTransformPosition","length","this","animationDuration","containerWidth","className","style","width","transform","transition","map","imageUrl","index","src","alt","String","height","type","onClick","top","disabled","React","Component","App","inputHandler","event","target","name","value","action","htmlFor","id","defaultValue","min","max","onChange","currentTarget","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5eaa240b.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemSize: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  transformPosition: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    transformPosition: 0,\n  };\n\n  gap = 10;\n\n  buttonsHandler = (direction: 'next' | 'prev') => {\n    const {\n      images,\n      itemSize,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    if (direction === 'prev') {\n      this.setState(state => {\n        const result\n          = state.transformPosition + itemSize * step + this.gap * step;\n\n        const maxTransformPosition\n          = itemSize * images.length\n            + this.gap * (images.length - frameSize)\n            - itemSize * frameSize;\n\n        if (state.transformPosition === 0 && infinite) {\n          return ({\n            transformPosition: -maxTransformPosition,\n          });\n        }\n\n        if (result > 0) {\n          return ({\n            transformPosition: 0,\n          });\n        }\n\n        return ({\n          transformPosition: result,\n        });\n      });\n    }\n\n    if (direction === 'next') {\n      this.setState(state => {\n        const result\n          = state.transformPosition - itemSize * step - this.gap * step;\n\n        const maxTransformPosition\n          = -(itemSize * images.length\n            + this.gap * (images.length - frameSize)\n            - itemSize * frameSize);\n\n        if (state.transformPosition === maxTransformPosition && infinite) {\n          return ({\n            transformPosition: 0,\n          });\n        }\n\n        if (result < maxTransformPosition) {\n          return ({\n            transformPosition: maxTransformPosition,\n          });\n        }\n\n        return ({\n          transformPosition: result,\n        });\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemSize,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { transformPosition } = this.state;\n\n    const containerWidth = `${(itemSize * frameSize) + ((frameSize - 1) * this.gap)}px`;\n\n    const maxTransformPosition\n      = itemSize * images.length - this.gap * step - itemSize * step;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__images-container\"\n          style={{\n            width: `${containerWidth}`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${transformPosition}px)`,\n              transition: `${animationDuration}ms`,\n              gap: `${this.gap}px`,\n            }}\n          >\n            {images.map((imageUrl, index) => (\n              <li\n                className=\"Carousel__item\"\n                key={String(index + 1)}\n              >\n                <img\n                  className=\"Carousel__image\"\n                  src={imageUrl}\n                  alt={String(index + 1)}\n                  width={itemSize}\n                  height={itemSize}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__navigation-buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.buttonsHandler('prev')}\n            className=\"Carousel__button Carousel__button-prev\"\n            style={{\n              top: `${itemSize / 2 - 10}px`,\n            }}\n            disabled={\n              infinite\n                ? false\n                : transformPosition >= 0\n            }\n          >\n            ⇦\n          </button>\n\n          <button\n            className=\"Carousel__button Carousel__button-next\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => this.buttonsHandler('next')}\n            style={{\n              top: `${itemSize / 2 - 10}px`,\n\n            }}\n            disabled={\n              infinite\n                ? false\n                : -maxTransformPosition >= transformPosition\n            }\n          >\n            ⇨\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './reset.scss';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[]\n  itemSize: number\n  frameSize: number\n  step: number\n  animationDuration: number\n  infinite: boolean\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemSize: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(state => ({\n      ...state,\n      [event.target.name]: +event.target.value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemSize,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemSize={itemSize}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form\n          action=\"#\"\n          className=\"App__parameters\"\n        >\n          <label htmlFor=\"itemId\">\n            {'Item size: '}\n\n            <input\n              className=\"App__input\"\n              name=\"itemSize\"\n              type=\"number\"\n              id=\"itemId\"\n              defaultValue={itemSize}\n              min={0}\n              max={1000}\n              onChange={this.inputHandler}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            {'Frame size: '}\n\n            <input\n              className=\"App__input\"\n              id=\"frameId\"\n              type=\"number\"\n              name=\"frameSize\"\n              defaultValue={3}\n              min={1}\n              max={10}\n              onChange={this.inputHandler}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            {'Step: '}\n\n            <input\n              className=\"App__input\"\n              id=\"stepId\"\n              type=\"number\"\n              name=\"step\"\n              defaultValue={3}\n              min={0}\n              max={9}\n              onChange={this.inputHandler}\n            />\n          </label>\n\n          <label>\n            {'Animation duration: '}\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              defaultValue={1000}\n              min={0}\n              max={10000}\n              onChange={this.inputHandler}\n            />\n          </label>\n\n          <label>\n            {'Infinite '}\n\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              onChange={(event) => {\n                this.setState({\n                  infinite: event.currentTarget.checked,\n                });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}