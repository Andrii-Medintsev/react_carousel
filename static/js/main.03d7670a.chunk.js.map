{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transformPosition","gap","nextButtonHandler","props","images","itemSize","step","frameSize","infinite","setState","result","maxTransformPosition","length","prevButtonHandler","this","animationDuration","className","type","onClick","style","top","disabled","width","transform","transition","map","imageUrl","index","src","alt","String","height","React","Component","App","action","htmlFor","id","defaultValue","min","max","onChange","event","currentTarget","value","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03d7670a.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemSize: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  transformPosition: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    transformPosition: 0,\n  };\n\n  gap = 10;\n\n  nextButtonHandler = () => {\n    const {\n      images,\n      itemSize,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    this.setState(state => {\n      const result\n        = state.transformPosition - itemSize * step - this.gap * step;\n\n      const maxTransformPosition\n        = -(itemSize * images.length\n          + this.gap * (images.length - frameSize)\n          - itemSize * frameSize);\n\n      if (state.transformPosition === maxTransformPosition && infinite) {\n        return ({\n          transformPosition: 0,\n        });\n      }\n\n      if (result < maxTransformPosition) {\n        return ({\n          transformPosition: maxTransformPosition,\n        });\n      }\n\n      return ({\n        transformPosition: result,\n      });\n    });\n  };\n\n  prevButtonHandler = () => {\n    const {\n      images,\n      itemSize,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    this.setState(state => {\n      const result\n        = state.transformPosition + itemSize * step + this.gap * step;\n\n      const maxTransformPosition\n        = itemSize * images.length\n          + this.gap * (images.length - frameSize)\n          - itemSize * frameSize;\n\n      if (state.transformPosition === 0 && infinite) {\n        return ({\n          transformPosition: -maxTransformPosition,\n        });\n      }\n\n      if (result > 0) {\n        return ({\n          transformPosition: 0,\n        });\n      }\n\n      return ({\n        transformPosition: result,\n      });\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemSize,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { transformPosition } = this.state;\n\n    const maxTransformPosition\n      = itemSize * images.length - this.gap * step - itemSize * step;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          onClick={this.prevButtonHandler}\n          className=\"Carousel__button Carousel__button-prev\"\n          style={{\n            top: `${itemSize / 2 - 10}px`,\n          }}\n          disabled={\n            infinite\n              ? false\n              : transformPosition >= 0\n          }\n        >\n          ⇦\n        </button>\n\n        <div\n          className=\"Carousel__images-container\"\n          style={{ width: `${itemSize * frameSize + (frameSize - 1) * this.gap}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${transformPosition}px)`,\n              transition: `${animationDuration}ms`,\n              gap: `${this.gap}px`,\n            }}\n          >\n            {images.map((imageUrl, index) => (\n              <li\n                className=\"Carousel__item\"\n                key={String(index + 1)}\n              >\n                <img\n                  className=\"Carousel__image\"\n                  src={imageUrl}\n                  alt={String(index + 1)}\n                  width={itemSize}\n                  height={itemSize}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          className=\"Carousel__button Carousel__button-next\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={this.nextButtonHandler}\n          style={{\n            top: `${itemSize / 2 - 10}px`,\n\n          }}\n          disabled={\n            infinite\n              ? false\n              : -maxTransformPosition >= transformPosition\n          }\n        >\n          ⇨\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './reset.scss';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[]\n  itemSize: number\n  frameSize: number\n  step: number\n  animationDuration: number\n  infinite: boolean\n}\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemSize: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemSize,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemSize={itemSize}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form\n          action=\"#\"\n          className=\"App__parameters\"\n        >\n          <label htmlFor=\"itemId\">\n            {'Item size: '}\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"itemId\"\n              defaultValue={itemSize}\n              min={0}\n              max={1000}\n              onChange={(event) => {\n                this.setState({\n                  itemSize: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            {'Frame size: '}\n\n            <input\n              className=\"App__input\"\n              id=\"frameId\"\n              type=\"number\"\n              defaultValue={3}\n              min={1}\n              max={10}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            {'Step: '}\n\n            <input\n              className=\"App__input\"\n              id=\"stepId\"\n              type=\"number\"\n              defaultValue={3}\n              min={0}\n              max={9}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Animation duration: '}\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              defaultValue={1000}\n              min={0}\n              max={10000}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Infinite '}\n\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              onChange={(event) => {\n                this.setState({\n                  infinite: event.currentTarget.checked,\n                });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}